//1 1 2 3 5 8 13 21 34 55.....
//描述第n个斐波那契数的时候
 //迭代
int count = 0;
int Fib1(int n)
{
	if (n == 3)//测试第三个斐波那契数的计算次数
	{
		count++;
	}
	if (n <= 2)
		return 1;
	else
		return Fib1(n - 1) + Fib1(n - 2);
}
 //----------------------------------------------
 //50
 //49 48
 //48 47  47 46
 //47 46  46 45  46 45  45 44
 //............
//------------------------------------------------
//循环求第n个斐波那契数
int Fib2(int n)
{
	int a = 1;
	int b = 1;
	int c = 1;
	while (n > 2)
	{
		c = a + b;
		a = b;
		b = c;
		n--;
	}
	return c;
}
int main()
{
	int n = 0;
	int ret1 = 0;
	int ret2 = 0;
	scanf("%d", &n);
	//ret1 = Fib1(n);
	ret2 = Fib2(n);
	//TDD-测试驱动开发
	//printf("ret = %d\n",ret1);
	printf("ret = %d\n",ret2);
	//printf("count = %d\n", count);
	return 0;
}
